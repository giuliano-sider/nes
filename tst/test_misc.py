import os
import sys
import unittest

sys.path += os.pardir
from nes_cpu_test_utils import CreateTestCpu, execute_instruction
from instructions import *

class TestMiscInstructions(unittest.TestCase):

    def test_CLC(self):
        cpu = CreateTestCpu()
        cpu.set_carry()

        execute_instruction(cpu, opcode=CLC)

        self.assertEqual(cpu.carry(), 0)

    def test_that_every_documented_instruction_is_implemented(self):
        cpu = CreateTestCpu()

        self.assertEqual(ADC_IMMEDIATE, 0x69)
        execute_instruction(cpu, opcode=ADC_IMMEDIATE)
        self.assertEqual(ADC_ZEROPAGE, 0x65)
        execute_instruction(cpu, opcode=ADC_ZEROPAGE)
        self.assertEqual(ADC_ZEROPAGEX, 0x75)
        execute_instruction(cpu, opcode=ADC_ZEROPAGEX)
        self.assertEqual(ADC_ABSOLUTE, 0x6D)
        execute_instruction(cpu, opcode=ADC_ABSOLUTE)
        self.assertEqual(ADC_ABSOLUTE_X, 0x7D)
        execute_instruction(cpu, opcode=ADC_ABSOLUTE_X)
        self.assertEqual(ADC_ABSOLUTE_Y, 0x79)
        execute_instruction(cpu, opcode=ADC_ABSOLUTE_Y)
        self.assertEqual(ADC_INDIRECT_X, 0x61)
        execute_instruction(cpu, opcode=ADC_INDIRECT_X)
        self.assertEqual(ADC_INDIRECT_Y, 0x71)
        execute_instruction(cpu, opcode=ADC_INDIRECT_Y)

        self.assertEqual(AND_IMMEDIATE, 0x29)
        execute_instruction(cpu, opcode=AND_IMMEDIATE)
        self.assertEqual(AND_ZERO_PAGE, 0x25)
        execute_instruction(cpu, opcode=AND_ZERO_PAGE)
        self.assertEqual(AND_ZERO_PAGE_X, 0x35)
        execute_instruction(cpu, opcode=AND_ZERO_PAGE_X)
        self.assertEqual(AND_ABSOLUTE, 0x2D)
        execute_instruction(cpu, opcode=AND_ABSOLUTE)
        self.assertEqual(AND_ABSOLUTE_X, 0x3D)
        execute_instruction(cpu, opcode=AND_ABSOLUTE_X)
        self.assertEqual(AND_ABSOLUTE_Y, 0x39)
        execute_instruction(cpu, opcode=AND_ABSOLUTE_Y)
        self.assertEqual(AND_INDIRECT_X, 0x21)
        execute_instruction(cpu, opcode=AND_INDIRECT_X)
        self.assertEqual(AND_INDIRECT_Y, 0x31)
        execute_instruction(cpu, opcode=AND_INDIRECT_Y)

        self.assertEqual(ASL_ACCUMULATOR, 0x0A)
        execute_instruction(cpu, opcode=ASL_ACCUMULATOR)
        self.assertEqual(ASL_ZERO_PAGE, 0x06)
        execute_instruction(cpu, opcode=ASL_ZERO_PAGE)
        self.assertEqual(ASL_ZERO_PAGE_X, 0x16)
        execute_instruction(cpu, opcode=ASL_ZERO_PAGE_X)
        self.assertEqual(ASL_ABSOLUTE, 0x0E)
        execute_instruction(cpu, opcode=ASL_ABSOLUTE)
        self.assertEqual(ASL_ABSOLUTE_X, 0x1E)
        execute_instruction(cpu, opcode=ASL_ABSOLUTE_X)

        self.assertEqual(BIT_ZEROPAGE, 0x24)
        execute_instruction(cpu, opcode=BIT_ZEROPAGE)
        self.assertEqual(BIT_ABSOLUTE, 0x2C)
        execute_instruction(cpu, opcode=BIT_ABSOLUTE)

        self.assertEqual(BPL, 0x10)
        execute_instruction(cpu, opcode=BPL)
        self.assertEqual(BMI, 0x30)
        execute_instruction(cpu, opcode=BMI)
        self.assertEqual(BVC, 0x50)
        execute_instruction(cpu, opcode=BVC)
        self.assertEqual(BVS, 0x70)
        execute_instruction(cpu, opcode=BVS)
        self.assertEqual(BCC, 0x90)
        execute_instruction(cpu, opcode=BCC)
        self.assertEqual(BCS, 0xB0)
        execute_instruction(cpu, opcode=BCS)
        self.assertEqual(BNE, 0xD0)
        execute_instruction(cpu, opcode=BNE)
        self.assertEqual(BEQ, 0xF0)
        execute_instruction(cpu, opcode=BEQ)

        self.assertEqual(CMP_IMMEDIATE, 0xC9)
        execute_instruction(cpu, opcode=CMP_IMMEDIATE)
        self.assertEqual(CMP_ZEROPAGE, 0xC5)
        execute_instruction(cpu, opcode=CMP_ZEROPAGE)
        self.assertEqual(CMP_ZEROPAGE_X, 0xD5)
        execute_instruction(cpu, opcode=CMP_ZEROPAGE_X)
        self.assertEqual(CMP_ABSOLUTE, 0xCD)
        execute_instruction(cpu, opcode=CMP_ABSOLUTE)
        self.assertEqual(CMP_ABSOLUTE_X, 0xDD)
        execute_instruction(cpu, opcode=CMP_ABSOLUTE_X)
        self.assertEqual(CMP_ABSOLUTE_Y, 0xD9)
        execute_instruction(cpu, opcode=CMP_ABSOLUTE_Y)
        self.assertEqual(CMP_INDIRECT_X, 0xC1)
        execute_instruction(cpu, opcode=CMP_INDIRECT_X)
        self.assertEqual(CMP_INDIRECT_Y, 0xD1)
        execute_instruction(cpu, opcode=CMP_INDIRECT_Y)

        self.assertEqual(CPX_IMMEDIATE, 0xE0)
        execute_instruction(cpu, opcode=CPX_IMMEDIATE)
        self.assertEqual(CPX_ZEROPAGE, 0xE4)
        execute_instruction(cpu, opcode=CPX_ZEROPAGE)
        self.assertEqual(CPX_ABSOLUTE, 0xEC)
        execute_instruction(cpu, opcode=CPX_ABSOLUTE)

        self.assertEqual(CPY_IMMEDIATE, 0xC0)
        execute_instruction(cpu, opcode=CPY_IMMEDIATE)
        self.assertEqual(CPY_ZEROPAGE, 0xC4)
        execute_instruction(cpu, opcode=CPY_ZEROPAGE)
        self.assertEqual(CPY_ABSOLUTE, 0xCC)
        execute_instruction(cpu, opcode=CPY_ABSOLUTE)

        self.assertEqual(DEC_ZEROPAGE, 0xC6)
        execute_instruction(cpu, opcode=DEC_ZEROPAGE)
        self.assertEqual(DEC_ZEROPAGE_X, 0xD6)
        execute_instruction(cpu, opcode=DEC_ZEROPAGE_X)
        self.assertEqual(DEC_ABSOLUTE, 0xCE)
        execute_instruction(cpu, opcode=DEC_ABSOLUTE)
        self.assertEqual(DEC_ABSOLUTE_X, 0xDE)
        execute_instruction(cpu, opcode=DEC_ABSOLUTE_X)

        self.assertEqual(EOR_IMMEDIATE, 0x49)
        execute_instruction(cpu, opcode=EOR_IMMEDIATE)
        self.assertEqual(EOR_ZERO_PAGE, 0x45)
        execute_instruction(cpu, opcode=EOR_ZERO_PAGE)
        self.assertEqual(EOR_ZERO_PAGE_X, 0x55)
        execute_instruction(cpu, opcode=EOR_ZERO_PAGE_X)
        self.assertEqual(EOR_ABSOLUTE, 0x4D)
        execute_instruction(cpu, opcode=EOR_ABSOLUTE)
        self.assertEqual(EOR_ABSOLUTE_X, 0x5D)
        execute_instruction(cpu, opcode=EOR_ABSOLUTE_X)
        self.assertEqual(EOR_ABSOLUTE_Y, 0x59)
        execute_instruction(cpu, opcode=EOR_ABSOLUTE_Y)
        self.assertEqual(EOR_INDIRECT_X, 0x41)
        execute_instruction(cpu, opcode=EOR_INDIRECT_X)
        self.assertEqual(EOR_INDIRECT_Y, 0x51)
        execute_instruction(cpu, opcode=EOR_INDIRECT_Y)

        self.assertEqual(INC_ZEROPAGE, 0xE6)
        execute_instruction(cpu, opcode=INC_ZEROPAGE)
        self.assertEqual(INC_ZEROPAGE_X, 0xF6)
        execute_instruction(cpu, opcode=INC_ZEROPAGE_X)
        self.assertEqual(INC_ABSOLUTE, 0xEE)
        execute_instruction(cpu, opcode=INC_ABSOLUTE)
        self.assertEqual(INC_ABSOLUTE_X, 0xFE)
        execute_instruction(cpu, opcode=INC_ABSOLUTE_X)

        self.assertEqual(JMP_ABSOLUTE, 0x4C)
        execute_instruction(cpu, opcode=JMP_ABSOLUTE)
        self.assertEqual(JMP_INDIRECT, 0x6C)
        execute_instruction(cpu, opcode=JMP_INDIRECT)

        self.assertEqual(JSR, 0x20)
        execute_instruction(cpu, opcode=JSR)

        self.assertEqual(LDA_IMMEDIATE, 0xA9)
        execute_instruction(cpu, opcode=LDA_IMMEDIATE)
        self.assertEqual(LDA_ZEROPAGE, 0xA5)
        execute_instruction(cpu, opcode=LDA_ZEROPAGE)
        self.assertEqual(LDA_ZEROPAGE_X, 0xB5)
        execute_instruction(cpu, opcode=LDA_ZEROPAGE_X)
        self.assertEqual(LDA_ABSOLUTE, 0xAD)
        execute_instruction(cpu, opcode=LDA_ABSOLUTE)
        self.assertEqual(LDA_ABSOLUTE_X, 0xBD)
        execute_instruction(cpu, opcode=LDA_ABSOLUTE_X)
        self.assertEqual(LDA_ABSOLUTE_Y, 0xB9)
        execute_instruction(cpu, opcode=LDA_ABSOLUTE_Y)
        self.assertEqual(LDA_INDIRECT_X, 0xA1)
        execute_instruction(cpu, opcode=LDA_INDIRECT_X)
        self.assertEqual(LDA_INDIRECT_Y, 0xB1)
        execute_instruction(cpu, opcode=LDA_INDIRECT_Y)

        self.assertEqual(LDX_IMMEDIATE, 0xA2)
        execute_instruction(cpu, opcode=LDX_IMMEDIATE)
        self.assertEqual(LDX_ZEROPAGE, 0xA6)
        execute_instruction(cpu, opcode=LDX_ZEROPAGE)
        self.assertEqual(LDX_ZEROPAGE_Y, 0xB6)
        execute_instruction(cpu, opcode=LDX_ZEROPAGE_Y)
        self.assertEqual(LDX_ABSOLUTE, 0xAE)
        execute_instruction(cpu, opcode=LDX_ABSOLUTE)
        self.assertEqual(LDX_ABSOLUTE_Y, 0xBE)
        execute_instruction(cpu, opcode=LDX_ABSOLUTE_Y)

        self.assertEqual(LDY_IMMEDIATE, 0xA0)
        execute_instruction(cpu, opcode=LDY_IMMEDIATE)
        self.assertEqual(LDY_ZEROPAGE, 0xA4)
        execute_instruction(cpu, opcode=LDY_ZEROPAGE)
        self.assertEqual(LDY_ZEROPAGE_X, 0xB4)
        execute_instruction(cpu, opcode=LDY_ZEROPAGE_X)
        self.assertEqual(LDY_ABSOLUTE, 0xAC)
        execute_instruction(cpu, opcode=LDY_ABSOLUTE)
        self.assertEqual(LDY_ABSOLUTE_X, 0xBC)
        execute_instruction(cpu, opcode=LDY_ABSOLUTE_X)

        self.assertEqual(LSR_ACCUMULATOR, 0x4A)
        execute_instruction(cpu, opcode=LSR_ACCUMULATOR)
        self.assertEqual(LSR_ZERO_PAGE, 0x46)
        execute_instruction(cpu, opcode=LSR_ZERO_PAGE)
        self.assertEqual(LSR_ZERO_PAGE_X, 0x56)
        execute_instruction(cpu, opcode=LSR_ZERO_PAGE_X)
        self.assertEqual(LSR_ABSOLUTE, 0x4E)
        execute_instruction(cpu, opcode=LSR_ABSOLUTE)
        self.assertEqual(LSR_ABSOLUTE_X, 0x5E)
        execute_instruction(cpu, opcode=LSR_ABSOLUTE_X)

        self.assertEqual(NOP, 0xEA)
        execute_instruction(cpu, opcode=NOP)

        self.assertEqual(ORA_IMMEDIATE, 0x09)
        execute_instruction(cpu, opcode=ORA_IMMEDIATE)
        self.assertEqual(ORA_ZERO_PAGE, 0x05)
        execute_instruction(cpu, opcode=ORA_ZERO_PAGE)
        self.assertEqual(ORA_ZERO_PAGE_X, 0x15)
        execute_instruction(cpu, opcode=ORA_ZERO_PAGE_X)
        self.assertEqual(ORA_ABSOLUTE, 0x0D)
        execute_instruction(cpu, opcode=ORA_ABSOLUTE)
        self.assertEqual(ORA_ABSOLUTE_X, 0x1D)
        execute_instruction(cpu, opcode=ORA_ABSOLUTE_X)
        self.assertEqual(ORA_ABSOLUTE_Y, 0x19)
        execute_instruction(cpu, opcode=ORA_ABSOLUTE_Y)
        self.assertEqual(ORA_INDIRECT_X, 0x01)
        execute_instruction(cpu, opcode=ORA_INDIRECT_X)
        self.assertEqual(ORA_INDIRECT_Y, 0x11)
        execute_instruction(cpu, opcode=ORA_INDIRECT_Y)

        self.assertEqual(ROL_ACCUMULATOR, 0x2A)
        execute_instruction(cpu, opcode=ROL_ACCUMULATOR)
        self.assertEqual(ROL_ZERO_PAGE, 0x26)
        execute_instruction(cpu, opcode=ROL_ZERO_PAGE)
        self.assertEqual(ROL_ZERO_PAGE_X, 0x36)
        execute_instruction(cpu, opcode=ROL_ZERO_PAGE_X)
        self.assertEqual(ROL_ABSOLUTE, 0x2E)
        execute_instruction(cpu, opcode=ROL_ABSOLUTE)
        self.assertEqual(ROL_ABSOLUTE_X, 0x3E)
        execute_instruction(cpu, opcode=ROL_ABSOLUTE_X)

        self.assertEqual(ROR_ACCUMULATOR, 0x6A)
        execute_instruction(cpu, opcode=ROR_ACCUMULATOR)
        self.assertEqual(ROR_ZERO_PAGE, 0x66)
        execute_instruction(cpu, opcode=ROR_ZERO_PAGE)
        self.assertEqual(ROR_ZERO_PAGE_X, 0x76)
        execute_instruction(cpu, opcode=ROR_ZERO_PAGE_X)
        self.assertEqual(ROR_ABSOLUTE, 0x6E)
        execute_instruction(cpu, opcode=ROR_ABSOLUTE)
        self.assertEqual(ROR_ABSOLUTE_X, 0x7E)
        execute_instruction(cpu, opcode=ROR_ABSOLUTE_X)

        self.assertEqual(RTI, 0x40)
        execute_instruction(cpu, opcode=RTI)

        self.assertEqual(RTS, 0x60)
        execute_instruction(cpu, opcode=RTS)

        self.assertEqual(SBC_IMMEDIATE, 0xE9)
        execute_instruction(cpu, opcode=SBC_IMMEDIATE)
        self.assertEqual(SBC_ZEROPAGE, 0xE5)
        execute_instruction(cpu, opcode=SBC_ZEROPAGE)
        self.assertEqual(SBC_ZEROPAGE_X, 0xF5)
        execute_instruction(cpu, opcode=SBC_ZEROPAGE_X)
        self.assertEqual(SBC_ABSOLUTE, 0xED)
        execute_instruction(cpu, opcode=SBC_ABSOLUTE)
        self.assertEqual(SBC_ABSOLUTE_X, 0xFD)
        execute_instruction(cpu, opcode=SBC_ABSOLUTE_X)
        self.assertEqual(SBC_ABSOLUTE_Y, 0xF9)
        execute_instruction(cpu, opcode=SBC_ABSOLUTE_Y)
        self.assertEqual(SBC_INDIRECT_X, 0xE1)
        execute_instruction(cpu, opcode=SBC_INDIRECT_X)
        self.assertEqual(SBC_INDIRECT_Y, 0xF1)
        execute_instruction(cpu, opcode=SBC_INDIRECT_Y)

        self.assertEqual(STA_ZEROPAGE, 0x85)
        execute_instruction(cpu, opcode=STA_ZEROPAGE)
        self.assertEqual(STA_ZEROPAGE_X, 0x95)
        execute_instruction(cpu, opcode=STA_ZEROPAGE_X)
        self.assertEqual(STA_ABSOLUTE, 0x8D)
        execute_instruction(cpu, opcode=STA_ABSOLUTE)
        self.assertEqual(STA_ABSOLUTE_X, 0x9D)
        execute_instruction(cpu, opcode=STA_ABSOLUTE_X)
        self.assertEqual(STA_ABSOLUTE_Y, 0x99)
        execute_instruction(cpu, opcode=STA_ABSOLUTE_Y)
        self.assertEqual(STA_INDIRECT_X, 0x81)
        execute_instruction(cpu, opcode=STA_INDIRECT_X)
        self.assertEqual(STA_INDIRECT_Y, 0x91)
        execute_instruction(cpu, opcode=STA_INDIRECT_Y)

        self.assertEqual(STX_ZEROPAGE, 0x86)
        execute_instruction(cpu, opcode=STX_ZEROPAGE)
        self.assertEqual(STX_ZEROPAGE_Y, 0x96)
        execute_instruction(cpu, opcode=STX_ZEROPAGE_Y)
        self.assertEqual(STX_ABSOLUTE, 0x8E)
        execute_instruction(cpu, opcode=STX_ABSOLUTE)

        self.assertEqual(STY_ZEROPAGE, 0x84)
        execute_instruction(cpu, opcode=STY_ZEROPAGE)
        self.assertEqual(STY_ZEROPAGE_X, 0x94)
        execute_instruction(cpu, opcode=STY_ZEROPAGE_X)
        self.assertEqual(STY_ABSOLUTE, 0x8C)
        execute_instruction(cpu, opcode=STY_ABSOLUTE)

        # Flag instructions:

        self.assertEqual(CLC, 0x18)
        execute_instruction(cpu, opcode=CLC)
        self.assertEqual(SEC, 0x38)
        execute_instruction(cpu, opcode=SEC)

        self.assertEqual(CLI, 0x58)
        execute_instruction(cpu, opcode=CLI)
        self.assertEqual(SEI, 0x78)
        execute_instruction(cpu, opcode=SEI)

        self.assertEqual(CLV, 0xB8)
        execute_instruction(cpu, opcode=CLV)

        self.assertEqual(CLD, 0xD8)
        execute_instruction(cpu, opcode=CLD)
        self.assertEqual(SED, 0xF8)
        execute_instruction(cpu, opcode=SED)

        # Register instructions:

        self.assertEqual(TAX, 0xAA)
        execute_instruction(cpu, opcode=TAX)
        self.assertEqual(TXA, 0x8A)
        execute_instruction(cpu, opcode=TXA)
        self.assertEqual(DEX, 0xCA)
        execute_instruction(cpu, opcode=DEX)
        self.assertEqual(INX, 0xE8)
        execute_instruction(cpu, opcode=INX)
        self.assertEqual(TAY, 0xA8)
        execute_instruction(cpu, opcode=TAY)
        self.assertEqual(TYA, 0x98)
        execute_instruction(cpu, opcode=TYA)
        self.assertEqual(DEY, 0x88)
        execute_instruction(cpu, opcode=DEY)
        self.assertEqual(INY, 0xC8)
        execute_instruction(cpu, opcode=INY)       

        # Stack instructions:

        self.assertEqual(TXS, 0x9A)
        execute_instruction(cpu, opcode=TXS)
        self.assertEqual(TSX, 0xBA)
        execute_instruction(cpu, opcode=TSX)
        self.assertEqual(PHA, 0x48)
        execute_instruction(cpu, opcode=PHA)
        self.assertEqual(PLA, 0x68)
        execute_instruction(cpu, opcode=PLA)
        self.assertEqual(PHP, 0x08)
        execute_instruction(cpu, opcode=PHP)
        self.assertEqual(PLP, 0x28)
        execute_instruction(cpu, opcode=PLP)

if __name__ == '__main__':
    unittest.main()




